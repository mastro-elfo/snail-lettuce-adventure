{"version":3,"sources":["components/GrowTypography.jsx","components/ErrorWrapper.jsx","components/ThemeWrapper.jsx","components/NotifyWrapper.jsx","components/Print.jsx","components/TopFab.jsx","components/Page.jsx","components/dashboard/Header.jsx","components/BoxContainer.jsx","components/dashboard/utils.js","components/dashboard/Content.jsx","components/dashboard/Drawer.jsx","components/dashboard/View.jsx","components/Router.jsx","components/dashboard/Router.jsx","App.jsx","serviceWorker.js","index.js"],"names":["GrowTypography","styled","Typography","flexGrow","ErrorWrapper","props","state","error","info","console","this","AppBar","Toolbar","variant","IconButton","color","title","onClick","window","location","reload","Container","gutterBottom","message","component","stack","split","map","line","i","key","children","Component","THEME","createMuiTheme","palette","primary","secondary","ThemeWrapper","theme","notistackRef","createRef","handleDismiss","current","closeSnackbar","ref","maxSnack","anchorOrigin","vertical","horizontal","autoHideDuration","action","useStyles","makeStyles","print","display","noPrint","Print","classes","className","NoPrint","Fab","position","bottom","spacing","right","zIndex","modal","TopFab","threshold","others","trigger","useScrollTrigger","disableHysteresis","Zoom","in","size","event","scrollTo","top","left","behavior","Page","content","drawer","header","topFab","DashboardHeader","onOpen","BoxContainer","Box","py","dhm2str","dhm","parts","days","push","dhmline","hours","minutes","andJoin","count","singular","plural","pluralize","list","glue","and","length","join","last","slice","formatDate","d","toLocaleString","undefined","weekday","year","month","day","hour","minute","dateStyle","timeStyle","DashboardContent","useState","sla","setSla","Date","now","setNow","setDhm","expiry","setExpiry","request","setRequest","until","setUntil","useEffect","to","setTimeout","getSeconds","clearTimeout","match","parseInt","sla2dhm","date","dateAddDhm","List","ListItem","ListItemText","TextField","fullWidth","label","placeholder","value","helperText","onChange","target","utils","DateFnsUtils","format","r","LISTS","DashboardDrawer","open","onClose","SwipeableDrawer","listIndex","items","subheader","ListSubheader","item","itemIndex","ListItemIcon","DrawerItem","type","href","Icon","warn","useHistory","Divider","isLink","isExternal","startsWith","isFn","button","DashboardView","setOpen","ROUTES","path","View","exact","basename","route","App","NotifyWrapper","Router","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.9e3253e5.chunk.js","sourcesContent":["// import React, { Component, Fragment } from \"react\";\n\nimport { styled } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst GrowTypography = styled(Typography)({\n  flexGrow: 1\n});\n\nexport default GrowTypography;\n","import React, { Component, Fragment } from \"react\";\n\nimport {\n  AppBar,\n  Container,\n  IconButton,\n  Toolbar,\n  Typography\n} from \"@material-ui/core\";\n\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\nimport GrowTypography from \"./GrowTypography\";\n\nexport default class ErrorWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidCatch(error, info) {\n    console.error(\"Console Error\", error, info, this.props);\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { error };\n  }\n\n  render() {\n    const { error } = this.state;\n\n    if (error) {\n      return (\n        <Fragment>\n          <AppBar>\n            <Toolbar>\n              <GrowTypography variant=\"h6\">An error occurred</GrowTypography>\n              <IconButton\n                color=\"inherit\"\n                title=\"Refresh\"\n                onClick={window.location.reload}\n              >\n                <RefreshIcon />\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n          <Toolbar />\n          <Container>\n            <Typography variant=\"h3\" gutterBottom>\n              {error.message}\n            </Typography>\n            <Typography component=\"ul\">\n              {error.stack.split(\"\\n\").map((line, i) => (\n                <Typography key={i} component=\"li\" variant=\"body2\" gutterBottom>\n                  {line}\n                </Typography>\n              ))}\n            </Typography>\n          </Container>\n        </Fragment>\n      );\n    }\n    return this.props.children;\n  }\n}\n","import React from \"react\";\n\n// Customize main theme\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\n// See https://material-ui.com/customization/color/#color for details\nimport primary from \"@material-ui/core/colors/green\";\nimport secondary from \"@material-ui/core/colors/blue\";\n\n// See https://material-ui.com/customization/theming/#createmuitheme-options-args-theme for details\nconst THEME = createMuiTheme({\n  palette: {\n    primary,\n    secondary\n  }\n});\n\nexport default function ThemeWrapper({ children }) {\n  return <MuiThemeProvider theme={THEME}>{children}</MuiThemeProvider>;\n}\n","import React, { createRef } from \"react\";\n\nimport { SnackbarProvider } from \"notistack\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst notistackRef = createRef();\n\nexport default function({ children }) {\n  const handleDismiss = key => () => notistackRef.current.closeSnackbar(key);\n\n  return (\n    <SnackbarProvider\n      ref={notistackRef}\n      maxSnack={5}\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"right\"\n      }}\n      autoHideDuration={5000}\n      action={key => (\n        <IconButton\n          color=\"inherit\"\n          title=\"Dismiss\"\n          onClick={handleDismiss(key)}\n        >\n          <CloseIcon />\n        </IconButton>\n      )}\n    >\n      {children}\n    </SnackbarProvider>\n  );\n}\n\n// Use\n// `import {useSnackbar} from 'notistack';`\n// ...\n// This provide `enqueueSnackbar(message, options)` as hook.\n// See also: https://iamhosseindhv.com/notistack\n//\n// Options:\n// \t* `.variant`: oneOf(['default', 'error', 'success', 'warning', 'info'])\n//\n// Pass prop `autoHideDuration`, in milliseconds, to SnackbarProvider. Default is 5000.\n","import React from \"react\";\n\n// TODO: Check this: https://material-ui.com/system/display/#display-in-print\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  print: {\n    \"@media screen\": {\n      display: \"none\"\n    }\n  },\n  noPrint: {\n    \"@media print\": {\n      display: \"none\"\n    }\n  }\n});\n\nexport function Print({ children }) {\n  const classes = useStyles();\n  return <div className={classes.print}>{children}</div>;\n}\n\nexport function NoPrint({ children }) {\n  const classes = useStyles();\n  return <div className={classes.noPrint}>{children}</div>;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Fab, useScrollTrigger, Zoom } from \"@material-ui/core\";\n\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n\nconst useStyles = makeStyles(theme => ({\n  Fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(1),\n    right: theme.spacing(1),\n    zIndex: theme.zIndex.modal\n  }\n}));\n\nexport default function TopFab({ threshold = 100, ...others }) {\n  const classes = useStyles();\n  const trigger = useScrollTrigger({ disableHysteresis: true, threshold });\n\n  const handleClick = event => {\n    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <Fab\n        color=\"secondary\"\n        size=\"small\"\n        onClick={handleClick}\n        className={classes.Fab}\n        title=\"Move to Top\"\n        {...others}\n      >\n        <KeyboardArrowUpIcon />\n      </Fab>\n    </Zoom>\n  );\n}\n\nTopFab.propTypes = {\n  // Minimum scroll before show the button\n  threshold: PropTypes.number\n};\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Print, NoPrint } from \"./Print\";\nimport TopFab from \"./TopFab\";\n\nexport default function Page({\n  content = null,\n  drawer = null,\n  header = null,\n  print = null,\n  topFab = true\n}) {\n  return (\n    <Fragment>\n      <NoPrint>\n        {topFab && <TopFab />}\n        {!!drawer && drawer}\n        {!!header && header}\n        {!!content && content}\n      </NoPrint>\n      <Print>{!!print && print}</Print>\n    </Fragment>\n  );\n}\n\nPage.propTypes = {\n  topFab: PropTypes.bool,\n  content: PropTypes.element,\n  drawer: PropTypes.element,\n  header: PropTypes.element,\n  print: PropTypes.element\n};\n","import React, { Fragment } from \"react\";\n\nimport { AppBar, IconButton, Toolbar } from \"@material-ui/core\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport GrowTypography from \"../GrowTypography\";\n\nexport default function DashboardHeader({ onOpen }) {\n  return (\n    <Fragment>\n      <AppBar>\n        <Toolbar>\n          <IconButton color=\"inherit\" title=\"Open\" onClick={onOpen}>\n            <MenuIcon />\n          </IconButton>\n          <GrowTypography variant=\"h6\" color=\"inherit\">\n            Dashboard\n          </GrowTypography>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </Fragment>\n  );\n}\n","import React from \"react\";\n\nimport { Box, Container } from \"@material-ui/core\";\n\n/**\n * Puts a `Box` inside a `Container`.\n * Children are rendered inside box and all other props are passed to `Box` element\n * This is useful because you can define a default style for the `Box` element\n * @param       {[type]} children [description]\n * @param       {[type]} props    [description]\n * @constructor\n */\nexport default function BoxContainer({ children, ...props }) {\n  return (\n    <Container>\n      <Box py={1} {...props}>\n        {children}\n      </Box>\n    </Container>\n  );\n}\n","export const sla2dhm = sla => {\n  const parts = sla.match(/(\\d+\\s*d)?\\s*(\\d+h)?\\s*(\\d+m)?/);\n  return {\n    days: parts[1] === undefined ? 0 : parseInt(parts[1]),\n    hours: parts[2] === undefined ? 0 : parseInt(parts[2]),\n    minutes: parts[3] === undefined ? 0 : parseInt(parts[3])\n  };\n};\n\nexport const dhm2str = dhm => {\n  const parts = [];\n  if (dhm.days) parts.push(dhmline(dhm.days, \"day\", \"days\"));\n  if (dhm.hours) parts.push(dhmline(dhm.hours, \"hour\", \"hours\"));\n  if (dhm.minutes) parts.push(dhmline(dhm.minutes, \"minute\", \"minutes\"));\n  return andJoin(parts, \", \", \" and \");\n};\n\nexport const dhmline = (count, singular, plural) =>\n  count ? `${count} ${pluralize(count, singular, plural)}` : \"\";\n\nexport const pluralize = (count, singular, plural) =>\n  count === 1 ? singular : plural;\n\nexport const andJoin = (list, glue, and) => {\n  if (list.length < 2) return list.join(glue);\n  const last = list.slice(-1);\n  return [list.slice(0, -1).join(glue), last].join(and);\n};\n\nexport const formatDate = d =>\n  d.toLocaleString(undefined, {\n    weekday: \"long\",\n    year: \"numeric\",\n    month: \"2-digit\",\n    day: \"2-digit\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    dateStyle: \"short\",\n    timeStyle: \"short\"\n  });\n\nexport const dateAddDhm = (date, dhm) =>\n  new Date(\n    +date + dhm.days * 86400000 + dhm.hours * 3600000 + dhm.minutes * 60000\n  );\n","import React, { useEffect, useState } from \"react\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nimport { List, ListItem, ListItemText, TextField } from \"@material-ui/core\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDateTimePicker\n} from \"@material-ui/pickers\";\n\nimport BoxContainer from \"../BoxContainer\";\n\nimport { sla2dhm, dhm2str, dateAddDhm, formatDate } from \"./utils\";\n\nexport default function DashboardContent() {\n  // SLA input value\n  // Syntax: /(\\d+\\s*d)?\\s*(\\d+h)?\\s*(\\d+m)?/\n  // Eg \"1d 2h 3m\"\n  const [sla, setSla] = useState(\"\");\n  // Now\n  const [now, setNow] = useState(new Date());\n  // const [now] = useState(new Date(2020, 4, 18, 18, 0));\n  // SLA exploded\n  const [dhm, setDhm] = useState({ days: 0, hours: 0, minutes: 0 });\n  // Now + SLA\n  const [expiry, setExpiry] = useState(now);\n  //\n  const [request, setRequest] = useState(now);\n  //\n  const [until, setUntil] = useState(now);\n\n  useEffect(() => {\n    // This effect reloads `now` when minute changes\n    const to = setTimeout(() => {\n      setNow(new Date());\n    }, (60 - now.getSeconds()) * 1000);\n    return () => clearTimeout(to);\n  });\n\n  useEffect(() => {\n    // Updates `dhm` when `sla` changes\n    setDhm(sla2dhm(sla));\n  }, [sla]);\n\n  useEffect(() => {\n    // Updates `expiry` when `now` or `dhm` change\n    setExpiry(dateAddDhm(now, dhm));\n  }, [dhm, now]);\n\n  useEffect(() => {\n    // Updates `until` when `request` changes\n    setUntil(new Date(+now + (+request - expiry)));\n  }, [expiry, now, request]);\n\n  return (\n    <BoxContainer>\n      <List>\n        <ListItem>\n          <ListItemText\n            primary={formatDate(now)}\n            secondary=\"Actual date and time\"\n          />\n        </ListItem>\n\n        <ListItem>\n          <TextField\n            fullWidth\n            label=\"Remaining SLA\"\n            placeholder=\"E.g. 1d 3h 15m\"\n            value={sla}\n            helperText={dhm2str(dhm)}\n            onChange={({ target: { value } }) => setSla(value)}\n          />\n        </ListItem>\n\n        <ListItem>\n          <ListItemText\n            primary={expiry ? formatDate(expiry) : \"\"}\n            secondary=\"Expiry date and time\"\n          />\n        </ListItem>\n\n        <ListItem>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDateTimePicker\n              fullWidth\n              label=\"Request expiry date/time\"\n              format=\"dd/MM/yyyy HH:mm\"\n              value={request}\n              onChange={r => setRequest(r)}\n              error={+request < +expiry}\n            />\n          </MuiPickersUtilsProvider>\n        </ListItem>\n\n        <ListItem>\n          <ListItemText primary={formatDate(until)} secondary=\"Suspend until\" />\n        </ListItem>\n      </List>\n    </BoxContainer>\n  );\n}\n","import React from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Divider,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader,\n  SwipeableDrawer\n} from \"@material-ui/core\";\n\n// see: https://material-ui.com/components/material-icons/\n\nconst LISTS = [\n  // {\n  //   header: \"ListSubheader\",\n  //   items: [\n  // {type: 'divider'},\n  // {type: 'item', title: 'ItemName', href: '/', primary: '', secondary: '', Icon: IconName}\n  // ]\n  // }\n];\n\nconst LARGER = false;\n\nexport default function DashboardDrawer({ open, onClose, onOpen }) {\n  return (\n    <SwipeableDrawer open={open} onClose={onClose} onOpen={onOpen}>\n      {LISTS.map(({ header, items }, listIndex) => (\n        <List\n          key={listIndex}\n          subheader={<ListSubheader>{header}</ListSubheader>}\n        >\n          {items.map((item, itemIndex) => (\n            <DrawerItem key={itemIndex} {...item} />\n          ))}\n        </List>\n      ))}\n      <List>\n        <ListItem>\n          <ListItemIcon>\n            <span>SLA</span>\n          </ListItemIcon>\n          <ListItemText primary=\"SnailLettuceAdventure\" secondary=\"v1.0.0\" />\n        </ListItem>\n      </List>\n    </SwipeableDrawer>\n  );\n}\n\nconst DrawerItem = ({\n  type,\n  title,\n  href,\n  primary = \"\",\n  secondary = \"\",\n  Icon\n}) => {\n  if (!primary) {\n    console.warn(\"DrawerItem alert: you didn't specify a `primary` prop\");\n  }\n  // TODO: add primary && secondary props\n  // TODO: handle external links\n  // TODO: add a callback instead of href\n  const { push } = useHistory();\n\n  if (type === \"divider\") {\n    return <Divider />;\n  } else if (type === \"item\") {\n    const isLink = typeof href === \"string\" && !!href;\n    const isExternal = isLink && href.startsWith(\"http\");\n    const isFn = typeof href === \"function\";\n    return (\n      <ListItem\n        button={isLink}\n        title={title}\n        onClick={() =>\n          isFn\n            ? href()\n            : isExternal\n            ? window.open(href)\n            : isLink\n            ? push(href)\n            : null\n        }\n      >\n        {!!Icon && (\n          <ListItemIcon>\n            <Icon />\n          </ListItemIcon>\n        )}\n        <ListItemText primary={primary} secondary={secondary} />\n        {LARGER && (\n          <ListItemIcon>\n            <span />\n          </ListItemIcon>\n        )}\n      </ListItem>\n    );\n  }\n  return (\n    <ListItem>\n      <ListItemText primary={type} secondary=\"Unknown type\" />\n    </ListItem>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\n\nimport Page from \"../Page\";\nimport Header from \"./Header\";\nimport Content from \"./Content\";\nimport Drawer from \"./Drawer\";\n\nexport default function DashboardView() {\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    // on load\n    // e.g. document.title = \"...\"\n    return () => {};\n  }, []);\n\n  return (\n    <Page\n      header={<Header onOpen={() => setOpen(true)} />}\n      content={<Content />}\n      drawer={\n        <Drawer\n          open={open}\n          onClose={() => setOpen(false)}\n          onOpen={() => setOpen(true)}\n        />\n      }\n    />\n  );\n}\n","import React from \"react\";\n\nimport {\n  // See https://reacttraining.com/react-router/web/guides/quick-start for details\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nimport Dashboard from \"./dashboard/Router\";\n\nconst ROUTES = [\n  // {path: '', component: RouterComponent, [exact]}\n  { path: \"/dashboard\", component: Dashboard, exact: true }\n];\n\nexport default function(props) {\n  return (\n    <Router basename=\"/snail-lettuce-adventure\">\n      <Switch>\n        {ROUTES.map((route, i) => (\n          <Route key={i} {...route} />\n        ))}\n        <Redirect to=\"/dashboard\" />\n      </Switch>\n    </Router>\n  );\n}\n","import React from \"react\";\n\nimport { Route, Switch } from \"react-router-dom\";\n\nimport View from \"./View\";\n\nexport default function DashboardRouter() {\n  return (\n    <Switch>\n      <Route path=\"/dashboard\" component={View} />\n    </Switch>\n  );\n}\n","import React from \"react\";\n\nimport ErrorWrapper from \"./components/ErrorWrapper\";\nimport ThemeWrapper from \"./components/ThemeWrapper\";\nimport NotifyWrapper from \"./components/NotifyWrapper\";\n\nimport Router from \"./components/Router\";\n\nexport default function App() {\n  return (\n    <ThemeWrapper>\n      <ErrorWrapper>\n        <NotifyWrapper>\n          <Router />\n        </NotifyWrapper>\n      </ErrorWrapper>\n    </ThemeWrapper>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}